version: "3.6"

services:
  postgres:
    image: postgres:14.2
    ports:
      - "5432:5432"
    volumes:
      - "./postgres:/var/lib/postgresql/data"
    env_file:
      - .env

  web_1:
    build: .
    restart: on-failure
#    ports:
#      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - postgres
      - rabbit
    volumes:
      - app-volume:/appdata

  web_2:
    build: .
    restart: on-failure
    #    ports:
    #      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - postgres
      - rabbit
    volumes:
      - app-volume:/appdata

  rabbit:
    image: rabbitmq:management
    ports:
      - "15672:15672"
      - "5672:5672"
    env_file:
      - .env
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:15672" ]
      interval: 30s
      timeout: 10s
      retries: 5

  consumer:
    build: consumer/
    restart: on-failure
    depends_on:
      - rabbit
      - cache
    links:
      - rabbit
      - cache
    env_file:
      - .env
    volumes:
      - app-volume:/appdata

  balancer:
    build: nginx/.
    ports:
      - "80:80"
    depends_on:
      - web_1
      - web_2
    links:
      - web_1
      - web_2
    volumes:
      - web-ui:/var/www/html

  cache:
    image: redis

volumes:
  app-volume:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: ${PWD}/appdata

  web-ui:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: ${PWD}/webgui
